# See guide
# https://geekflare.com/nginx-webserver-security-hardening-guide/

# redirect all http traffic to https
server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name .console.crux.cloud;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name .console.crux.cloud;

  ssl_certificate /etc/letsencrypt/live/console.crux.cloud/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/console.crux.cloud/privkey.pem; # managed by Certbot

  # enable session resumption to improve https performance
  # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
  ssl_session_cache shared:SSL:50m;
  ssl_session_timeout 1d;
  ssl_session_tickets off;

  # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  # enables server-side protection from BEAST attacks
  # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
  ssl_prefer_server_ciphers on;

  # disable SSLv3(enabled by default since nginx 0.8.19) since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
  ssl_protocols TLSv1.2 TLSv1.3;

  # ciphers chosen for forward secrecy and compatibility
  # http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html
  ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";

  # enable ocsp stapling (mechanism by which a site can convey certificate revocation information to visitors in a privacy-preserving, scalable manner)
  # http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/
  resolver 8.8.8.8 8.8.4.4;
  ssl_stapling on;
  ssl_stapling_verify on;

  # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
  # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
  # also https://hstspreload.org/
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
  client_max_body_size 2M; 
  # ... the rest of your configuration

  root /srv/crux/actual/public;
  if ($request_method !~ ^(GET|HEAD|POST|OPTIONS)$ )
  {
    return 405;
  }

  location /crux/ {
    proxy_pass          http://127.0.0.1:8080/;
    # proxy_set_header    Connection          $connection_upgrade;
    # proxy_set_header    Upgrade             $http_upgrade;
    # proxy_set_header    Host                $host;
    # proxy_set_header    X-Real-IP           $remote_addr;
    # proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
  }

  location / {
    proxy_pass          http://127.0.0.1:5000/;
  }
}
